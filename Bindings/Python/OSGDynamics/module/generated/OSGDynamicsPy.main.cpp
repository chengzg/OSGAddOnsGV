// This file has been generated by Py++.

// PyOpenSG is (C) Copyright 2005-2009 by Allen Bierbaum
//
// This file is part of PyOpenSG.
//
// PyOpenSG is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version.
//
// PyOpenSG is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
// more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if __GNUC__ >= 4 || __GNUC_MINOR__ >=3
#pragma GCC diagnostic warning "-Wold-style-cast"
#endif


#include "boost/python.hpp"

#include "OSGDynamics_mainheader.h"

#include "OsgPtrHelpers.h"

#include "boost/python/suite/indexing/map_indexing_suite.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "generated/FrameHandler.pypp.hpp"

#include "generated/FrameHandlerBase.pypp.hpp"

#include "generated/TimeSensor.pypp.hpp"

#include "generated/TimeSensorBase.pypp.hpp"

#include "generated/VRMLCoordinateInterpolator.pypp.hpp"

#include "generated/VRMLCoordinateInterpolatorBase.pypp.hpp"

#include "generated/VRMLInterpolator.pypp.hpp"

#include "generated/VRMLInterpolatorBase.pypp.hpp"

#include "generated/VRMLOrientationInterpolator.pypp.hpp"

#include "generated/VRMLOrientationInterpolatorBase.pypp.hpp"

#include "generated/VRMLPositionInterpolator.pypp.hpp"

#include "generated/VRMLPositionInterpolatorBase.pypp.hpp"

#include "generated/VRMLScalarInterpolator.pypp.hpp"

#include "generated/VRMLScalarInterpolatorBase.pypp.hpp"

using namespace std;

namespace bp = boost::python;

BOOST_PYTHON_MODULE(OSGDynamicsPy){
    register_FrameHandlerBase_class();

    register_FrameHandler_class();

    register_TimeSensorBase_class();

    register_TimeSensor_class();

    register_VRMLInterpolatorBase_class();

    register_VRMLInterpolator_class();

    register_VRMLCoordinateInterpolatorBase_class();

    register_VRMLCoordinateInterpolator_class();

    register_VRMLOrientationInterpolatorBase_class();

    register_VRMLOrientationInterpolator_class();

    register_VRMLPositionInterpolatorBase_class();

    register_VRMLPositionInterpolator_class();

    register_VRMLScalarInterpolatorBase_class();

    /** Helpers for OSG::VRMLInterpolator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::VRMLInterpolator, OSG::VRMLInterpolator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::VRMLInterpolator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::VRMLPositionInterpolator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::VRMLPositionInterpolator, OSG::VRMLPositionInterpolator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::VRMLPositionInterpolator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::VRMLCoordinateInterpolator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::VRMLCoordinateInterpolator, OSG::VRMLCoordinateInterpolator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::VRMLCoordinateInterpolator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::FrameHandler */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::FrameHandler, OSG::FrameHandler::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::FrameHandler::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::TimeSensor */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::TimeSensor, OSG::TimeSensor::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::TimeSensor::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::VRMLScalarInterpolator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::VRMLScalarInterpolator, OSG::VRMLScalarInterpolator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::VRMLScalarInterpolator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    /** Helpers for OSG::VRMLOrientationInterpolator */

    bp::def("RecPtr", &pyopensg::ToRefCountPtr<OSG::VRMLOrientationInterpolator, OSG::VRMLOrientationInterpolator::ObjRecPtr>);

    bp::def("CPtr", &pyopensg::ToCPtr<OSG::VRMLOrientationInterpolator::ObjRecPtr >, bp::return_value_policy<bp::reference_existing_object>());

    register_VRMLScalarInterpolator_class();
}

