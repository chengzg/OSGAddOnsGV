CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(OpenSGAddOns)

IF(NOT _OSGINITCACHELOADED AND EXISTS ${CMAKE_SOURCE_DIR}/CMakeCacheInitial.txt)

  GET_FILENAME_COMPONENT(_OSGTMPF "${CMAKE_SOURCE_DIR}/CMakeCacheInitial.txt" REALPATH)
  GET_FILENAME_COMPONENT(_OSGTMP  "${_OSGTMPF}" PATH)

  SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${_OSGTMP}")
  SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${_OSGTMP}/CMake")

  INCLUDE(${_OSGTMPF})
  SET(_OSGINITCACHELOADED TRUE CACHE INTERNAL "")
ENDIF(NOT _OSGINITCACHELOADED AND EXISTS ${CMAKE_SOURCE_DIR}/CMakeCacheInitial.txt)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${OpenSG_DIR}/share/OpenSG/cmake")

INCLUDE(OSGExternalProjectHelper)

SET(OSG_COMPONENTS OSGBase OSGSystem OSGState OSGGroup OSGDrawable OSGWindow
                   OSGText OSGUtil OSGWindowGLUT OSGFileIO OSGImageFileIO
                   OSGDynamics OSGContribCSM OSGEffectGroups)

IF(OSG_ENABLE_CUDA)
  LIST(APPEND OSG_COMPONENTS OSGContribComputeBase)
ENDIF(OSG_ENABLE_CUDA)

IF(UNIX)
  IF(APPLE)
    LIST(APPEND OSG_COMPONENTS OSGWindowCarbon)
    LIST(APPEND OSG_COMPONENTS OSGWindowCocoa)
  ELSE(APPLE)
    LIST(APPEND OSG_COMPONENTS OSGWindowX)
  ENDIF(APPLE)
ENDIF(UNIX)

IF(WIN32)
  LIST(APPEND OSG_COMPONENTS OSGWindowWIN32)
ENDIF(WIN32)

SET(OSG_PYTHON_MODULE_BASE_DIR "${CMAKE_SOURCE_DIR}/Bindings/Python" 
                               CACHE PATH "")


OSG_INIT(${OSG_COMPONENTS})

IF(WIN32)
#  OSG_CONFIGURE_GLEW()
ENDIF(WIN32)

SET(CFG_NAME OSGAddOns)
INCLUDE(CMakeLists.PackagePrepare.cmake)

##############################################################################
# MAIN BUILD STEPS
##############################################################################

#SET(OSG_EXCLUDE_FROM_BUILD ./WebInterface/CMakeLists.Lib.OSGContribWebInterface.txt)

OSG_COLLECT_LIBS(FALSE)
