/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class BbqTerrain!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE



//! access the type of the class
inline
OSG::FieldContainerType &BbqTerrainBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 BbqTerrainBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 BbqTerrainBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/


//! Get the value of the BbqTerrain::_sfBeacon field.
inline
Node * BbqTerrainBase::getBeacon(void) const
{
    return _sfBeacon.getValue();
}

//! Set the value of the BbqTerrain::_sfBeacon field.
inline
void BbqTerrainBase::setBeacon(Node * const value)
{
    editSField(BeaconFieldMask);

    _sfBeacon.setValue(value);
}

//! Get the value of the BbqTerrain::_sfDataSource field.
inline
BbqDataSource * BbqTerrainBase::getDataSource(void) const
{
    return _sfDataSource.getValue();
}

//! Set the value of the BbqTerrain::_sfDataSource field.
inline
void BbqTerrainBase::setDataSource(BbqDataSource * const value)
{
    editSField(DataSourceFieldMask);

    _sfDataSource.setValue(value);
}
//! Get the value of the BbqTerrain::_sfMaxNumResidentNodes field.

inline
UInt32 &BbqTerrainBase::editMaxNumResidentNodes(void)
{
    editSField(MaxNumResidentNodesFieldMask);

    return _sfMaxNumResidentNodes.getValue();
}

//! Get the value of the BbqTerrain::_sfMaxNumResidentNodes field.
inline
      UInt32  BbqTerrainBase::getMaxNumResidentNodes(void) const
{
    return _sfMaxNumResidentNodes.getValue();
}

//! Set the value of the BbqTerrain::_sfMaxNumResidentNodes field.
inline
void BbqTerrainBase::setMaxNumResidentNodes(const UInt32 value)
{
    editSField(MaxNumResidentNodesFieldMask);

    _sfMaxNumResidentNodes.setValue(value);
}
//! Get the value of the BbqTerrain::_sfScreenSpaceError field.

inline
Real32 &BbqTerrainBase::editScreenSpaceError(void)
{
    editSField(ScreenSpaceErrorFieldMask);

    return _sfScreenSpaceError.getValue();
}

//! Get the value of the BbqTerrain::_sfScreenSpaceError field.
inline
      Real32  BbqTerrainBase::getScreenSpaceError(void) const
{
    return _sfScreenSpaceError.getValue();
}

//! Set the value of the BbqTerrain::_sfScreenSpaceError field.
inline
void BbqTerrainBase::setScreenSpaceError(const Real32 value)
{
    editSField(ScreenSpaceErrorFieldMask);

    _sfScreenSpaceError.setValue(value);
}
//! Get the value of the BbqTerrain::_sfEnableSkirts field.

inline
bool &BbqTerrainBase::editEnableSkirts(void)
{
    editSField(EnableSkirtsFieldMask);

    return _sfEnableSkirts.getValue();
}

//! Get the value of the BbqTerrain::_sfEnableSkirts field.
inline
      bool  BbqTerrainBase::getEnableSkirts(void) const
{
    return _sfEnableSkirts.getValue();
}

//! Set the value of the BbqTerrain::_sfEnableSkirts field.
inline
void BbqTerrainBase::setEnableSkirts(const bool value)
{
    editSField(EnableSkirtsFieldMask);

    _sfEnableSkirts.setValue(value);
}
//! Get the value of the BbqTerrain::_sfShowSwitchDistance field.

inline
bool &BbqTerrainBase::editShowSwitchDistance(void)
{
    editSField(ShowSwitchDistanceFieldMask);

    return _sfShowSwitchDistance.getValue();
}

//! Get the value of the BbqTerrain::_sfShowSwitchDistance field.
inline
      bool  BbqTerrainBase::getShowSwitchDistance(void) const
{
    return _sfShowSwitchDistance.getValue();
}

//! Set the value of the BbqTerrain::_sfShowSwitchDistance field.
inline
void BbqTerrainBase::setShowSwitchDistance(const bool value)
{
    editSField(ShowSwitchDistanceFieldMask);

    _sfShowSwitchDistance.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void BbqTerrainBase::execSync (      BbqTerrainBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (BeaconFieldMask & whichField))
        _sfBeacon.syncWith(pFrom->_sfBeacon);

    if(FieldBits::NoField != (DataSourceFieldMask & whichField))
        _sfDataSource.syncWith(pFrom->_sfDataSource);

    if(FieldBits::NoField != (MaxNumResidentNodesFieldMask & whichField))
        _sfMaxNumResidentNodes.syncWith(pFrom->_sfMaxNumResidentNodes);

    if(FieldBits::NoField != (ScreenSpaceErrorFieldMask & whichField))
        _sfScreenSpaceError.syncWith(pFrom->_sfScreenSpaceError);

    if(FieldBits::NoField != (EnableSkirtsFieldMask & whichField))
        _sfEnableSkirts.syncWith(pFrom->_sfEnableSkirts);

    if(FieldBits::NoField != (ShowSwitchDistanceFieldMask & whichField))
        _sfShowSwitchDistance.syncWith(pFrom->_sfShowSwitchDistance);
}
#endif


inline
const Char8 *BbqTerrainBase::getClassname(void)
{
    return "BbqTerrain";
}
OSG_GEN_CONTAINERPTR(BbqTerrain);

OSG_END_NAMESPACE

