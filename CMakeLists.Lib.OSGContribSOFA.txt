
IF(OSG_OGL_COREONLY AND NOT OSG_CHECK_COREONLY)
  RETURN()
ENDIF()

OSG_ADD_PROJECT("OSGContribSOFA")
OSG_SELECT_PROJECT()

##############################################################################
# dependencies
##############################################################################

# dependencies - OpenSG
SET(${PROJECT_NAME}_DEP_OSG_LIB OSGDrawable OSGEffectGroups)
SET(${PROJECT_NAME}_DEP_TEST_OSG_LIB OSGGroup OSGUtil OSGWindowGLUT)

# dependencies - External
# SET(${PROJECT_NAME}_DEP_LIB)
# SET(${PROJECT_NAME}_DEP_LIBDIR)
# SET(${PROJECT_NAME}_DEP_INCDIR)

# SET(${PROJECT_NAME}_DEP_TEST_LIB)
# SET(${PROJECT_NAME}_DEP_TEST_LIBDIR)
# SET(${PROJECT_NAME}_DEP_TEST_INCDIR)

# dependencies - Additional
# SET(${PROJECT_NAME}_DEP_ADD_INCDIR)

##############
#### SOFA
##############

IF(NOT Sofa_ROOT)
  SET (Sofa_ROOT /home/gerrit/Projects/Inria/Packaged/Sofa.git)
ENDIF()

IF(WIN32)
  SET(SOFA_VERSION "_1_0")
ELSE()
  SET(SOFA_VERSION "")
ENDIF()

SET (Sofa_INCLUDE_DIRS)
LIST(APPEND Sofa_INCLUDE_DIRS "${Sofa_ROOT}/framework")
LIST(APPEND Sofa_INCLUDE_DIRS "${Sofa_ROOT}/modules")
LIST(APPEND Sofa_INCLUDE_DIRS "${Sofa_ROOT}/applications")

LIST(APPEND ${PROJECT_NAME}_DEP_INCDIR Sofa_INCLUDE_DIRS)

SET (Sofa_LIBRARY_DIRS)
LIST(APPEND Sofa_LIBRARY_DIRS ${Sofa_ROOT}/lib)

LIST(APPEND ${PROJECT_NAME}_DEP_LIBDIR  Sofa_LIBRARY_DIRS)

SET(Sofa_LIBRARIES sofacore${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofahelper${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofadefaulttype${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofasimulation${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofatree${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofa_base_visual${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofa_opengl_visual${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofa_base_topology${SOFA_VERSION})
LIST(APPEND Sofa_LIBRARIES sofa_component${SOFA_VERSION})

LIST(APPEND ${PROJECT_NAME}_DEP_LIB Sofa_LIBRARIES)

LIST(APPEND ${PROJECT_NAME}_DEP_DEFS OSG_GL_INCLUDE_GLEW)

LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_HAVE_GLEW)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_HAVE_GLEW)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_HAVE_ZLIB)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_HAVE_PNG)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_HAVE_EIGEN2)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_SUPPORT_MAPPED_MASS)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_DUMP_VISITOR_INFO)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS SOFA_GUI_GLUT)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS TIXML_USE_STL)
LIST(APPEND ${PROJECT_NAME}_DEP_DEFS QT_XML_LIB)

OSG_ADD_GLEWPACKAGE(FALSE)

##############
#### SOFA END
##############

SET(${PROJECT_NAME}_CXXFLAGS ${OSG_ADD_CXX_FLAGS})

OSG_ADD_GLUTPACKAGE(TRUE)

SET(${PROJECT_NAME}_NO_DOC TRUE)

OSG_STORE_PROJECT_DEPENDENCIES()

##############################################################################
# collect sources
##############################################################################

SET(${PROJECT_NAME}_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

OSG_ADD_DIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}")

##############################################################################
# setup python bindings
##############################################################################

SET(${PROJECT_NAME}_NO_PYTHON TRUE)

##############################################################################
# setup build
##############################################################################

OSG_SETUP_PROJECT("OSG_COMPILECONTRIBSOFALIB")
