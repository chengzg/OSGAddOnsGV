/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class RayTracer
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGRAYTRACERBASE_H_
#define _OSGRAYTRACERBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribRRTDef.h"

#include "OSGBaseTypes.h"

#include "OSGFieldBundle.h" // Parent

#include "OSGNodeFields.h" // RayTracingRoot type
#include "OSGNodeFields.h" // BackgroundRoot type
#include "OSGUInt32Fields.h" // Width type
#include "OSGUInt32Fields.h" // Height type

#include "OSGRayTracerFields.h"

OSG_BEGIN_NAMESPACE

class RayTracer;

//! \brief RayTracer Base Class.

class OSG_CONTRIBRRT_DLLMAPPING RayTracerBase : public FieldBundle
{
  public:

    typedef FieldBundle Inherited;
    typedef FieldBundle ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(RayTracer);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        RayTracingRootFieldId = Inherited::NextFieldId,
        BackgroundRootFieldId = RayTracingRootFieldId + 1,
        WidthFieldId = BackgroundRootFieldId + 1,
        HeightFieldId = WidthFieldId + 1,
        NextFieldId = HeightFieldId + 1
    };

    static const OSG::BitVector RayTracingRootFieldMask =
        (TypeTraits<BitVector>::One << RayTracingRootFieldId);
    static const OSG::BitVector BackgroundRootFieldMask =
        (TypeTraits<BitVector>::One << BackgroundRootFieldId);
    static const OSG::BitVector WidthFieldMask =
        (TypeTraits<BitVector>::One << WidthFieldId);
    static const OSG::BitVector HeightFieldMask =
        (TypeTraits<BitVector>::One << HeightFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldBundleType &getClassType   (void);
    static UInt32           getClassTypeId (void);
    static UInt16           getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldBundleType &getType         (void);
    virtual const FieldBundleType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

            const SFNodePtr           *getSFRayTracingRoot  (void) const;
            const SFNodePtr           *getSFBackgroundRoot  (void) const;


                  NodePtrConst getRayTracingRoot (void) const;

                  NodePtrConst getBackgroundRoot (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setRayTracingRoot (NodePtrConstArg value);
            void setBackgroundRoot (NodePtrConstArg value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  RayTracerP create     (void);
    static  RayTracerP createEmpty(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldBundleP shallowCopy(void) const;

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static void   classDescInserter(TypeObject &oType);
    static Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFNodePtr         _sfRayTracingRoot;
    SFNodePtr         _sfBackgroundRoot;
    SFUInt32          _sfWidth;
    SFUInt32          _sfHeight;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    RayTracerBase(void);
    RayTracerBase(const RayTracerBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~RayTracerBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const RayTracer *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleRayTracingRoot  (void) const;
    EditFieldHandlePtr editHandleRayTracingRoot (void);
    GetFieldHandlePtr  getHandleBackgroundRoot  (void) const;
    EditFieldHandlePtr editHandleBackgroundRoot (void);
    GetFieldHandlePtr  getHandleWidth           (void) const;
    EditFieldHandlePtr editHandleWidth          (void);
    GetFieldHandlePtr  getHandleHeight          (void) const;
    EditFieldHandlePtr editHandleHeight         (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


#ifdef OSG_1_GET_COMPAT
                  SFUInt32            *getSFWidth           (void);
#endif
                  SFUInt32            *editSFWidth          (void);
            const SFUInt32            *getSFWidth           (void) const;

#ifdef OSG_1_GET_COMPAT
                  SFUInt32            *getSFHeight          (void);
#endif
                  SFUInt32            *editSFHeight         (void);
            const SFUInt32            *getSFHeight          (void) const;


#ifdef OSG_1_GET_COMPAT
                  UInt32              &getWidth           (void);
#endif
                  UInt32              &editWidth          (void);
            const UInt32              &getWidth           (void) const;

#ifdef OSG_1_GET_COMPAT
                  UInt32              &getHeight          (void);
#endif
                  UInt32              &editHeight         (void);
            const UInt32              &getHeight          (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setWidth          (const UInt32 &value);
            void setHeight         (const UInt32 &value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const RayTracerBase &source);
};

/** Type specific RefPtr type for RayTracer. */
typedef RefPtr<RayTracerP> RayTracerRefP;


OSG_END_NAMESPACE

#endif /* _OSGRAYTRACERBASE_H_ */
